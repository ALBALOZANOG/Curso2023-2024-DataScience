# -*- coding: utf-8 -*-
"""Task07

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Jr0detRw0tI8dNO9DCwRjiv4uIpxhtc

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
from rdflib.plugins.sparql import prepareQuery

q1=prepareQuery('''
    SELECT distinct ?subject
    where{
        ?subject rdfs:subClassOf ns:LivingThing.}''',
    initNs={"rdfs":RDFS, "ns":ns}
)

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
q2 = """
    SELECT ?person
    WHERE {
       ?person a/rdfs:subClassOf* ns:Person .}
"""

q2 = prepareQuery(q2, initNs={"ns": ns, "rdfs": RDFS})

# Visualize the results
for r in g.query(q2):
    print(r)

"""**TASK 7.3: List all individuals of "Person" or "Animal" and all their properties including their class with RDFLib and SPARQL. You do not need to list the individuals of the subclasses of person**

"""

ns = Namespace("http://somewhere#")

# Construct a SPARQL query to find individuals of "Person" or "Animal" with their properties
query = """
    SELECT ?individual ?class ?property ?value
    WHERE {
        ?individual a ?class .
        FILTER (?class = ns:Person || ?class = ns:Animal)
        ?individual ?property ?value .
    }
"""
q3 = prepareQuery(query, initNs={"ns": ns})

for r in g.query(q3):
    print(r)

"""**TASK 7.4:  List the name of the persons who know Rocky**"""

# TO DO
# Visualize the results
# TO DO
# Visualize the results

q4 = """
SELECT ?personName
WHERE {
    ?person a ns:Person ; ns:knows
    ?otherPerson .
    ?otherPerson ns:name "Rocky" .
    ?person ns:name ?personName .
    ?personName foaf:knows ns:RockySmith.
}
"""
for row in g.query(q4):
    print(row)

"""**Task 7.5: List the entities who know at least two other entities in the graph**"""

# TO DO
# Visualize the results


VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0")
from rdflib.plugins.sparql import prepareQuery

q5 = prepareQuery('''
  SELECT DISTINCT ?entity
    WHERE {
        ?entity ns:knows ?entity1.
        ?entity ns:knows ?entity2.
        FILTER (?entity1 != ?entity2)
    }
  ''',
  initNs = { "vcard": VCARD, "ns": ns, "RDFS": RDFS}
)
for r in g.query(q5):
    print(r.entity)